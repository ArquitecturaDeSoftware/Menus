#test with: http://editor.swager.io/
swagger: '2.0'
info:
  version: 1.0.0
  title: Microservice for Menus
  description: JavaScript + MySQL
  license:
    name: Software Arcitecture 2018-II
host: 192.168.99.101:3000
basePath: /api/menus
schemes:
  - http
consumes:
  - application/json
produces:
  - aplication/json
paths:
  /api/menus/:
    post:
      summary: Creates a new menu
      operationId: createMenu
      parameters:
        - name: menu
          in: body
          required: true
          description: Menu Object
          schema:
            $ref: '#/definitions/MenuInput'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Menu'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequestModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ServerErrorModel'
    get:
      summary: Returns all Menus, just current, or all menu in the specific restaurant
      operationId: getMenus
      parameters:
        - name: query
          in: query
          description: The id of the menu's restaurant to be returned
          required: false
          type: integer
        - name: get_all
          in: query
          description: If it's true, returns all menus in the specific restaurant
          required: false
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/MenusList'
        '500':
          description: Internal Server error
          schema:
            $ref: '#/definitions/ServerErrorModel'
    put:
      summary: Updates a menu with the given id_comedor
      operationId: updateMenu
      parameters:
        - name: id_comedor
          in: query
          description: The id of the menu's restaurant to be updated
          required: true
          type: integer
        - name: menu
          in: body
          required: true
          description: Menu object
          schema:
            $ref: '#/definitions/MenuInput'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Menu'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/NotFoundModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ServerErrorModel'

definitions:

  #Menus
  Menu:
    type: object
    properties:
      id_menu:
        type: integer
      id_comedor:
        type: integer
      fecha:
        type: string
      sopa:
        type: string
      principio:
        type: string
      seco:
        type: string
      proteina:
        type: string
      jugo:
        type: string
      postre:
        type: string
      ensalada:
        type: string

  MenuInput:
    type: object
    properties:
      id_menu:
        type: integer
      id_comedor:
        type: integer
      fecha:
        type: string
      sopa:
        type: string
      principio:
        type: string
      seco:
        type: string
      proteina:
        type: string
      jugo:
        type: string
      postre:
        type: string
      ensalada:
        type: string

  MenusList:
    type: object
    required:
      - total
      - list
    properties:
      total:
        type: number
      list:
        type: array
        items:
          $ref: '#/definitions/Menu'

  #errors
  NotFoundModel:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        description: not found

  ServerErrorModel:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        description: internal server error
  BadRequestModel:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        description: bad request
